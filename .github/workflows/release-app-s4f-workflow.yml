name: Release app for S4F
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Clean
        run: |
          rm -rf ./dist/*
          rm -rf ./reports/*
          rm -rf ./coverage/*
          mkdir -p ./reports
      - name: Build Angular
        run: |
          cp ./src/index-s4f-matomo.html ./src/index.html
          cp ./src/favicon-s4f.ico ./src/favicon.ico
          npm install
          npm run build-s4f-prod -- --base-href 'https://apps.scientists4future.org/cards-for-future/'
      - name: Build Release
        run: |
          npm run release-only-web-s4f
      - name: Get Name of Artifact
        run: |
          ARTIFACT_PATHNAME=$(ls ./release/*.zip | head -n 1)
          ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
          echo ::set-env name=ARTIFACT_NAME::${ARTIFACT_NAME}
          echo ::set-env name=ARTIFACT_PATHNAME::${ARTIFACT_PATHNAME}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ env.ARTIFACT_PATHNAME }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/zip
